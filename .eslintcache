[{"/home/aswassaw/Documents/belajar-react-table/src/index.js":"1","/home/aswassaw/Documents/belajar-react-table/src/App.js":"2","/home/aswassaw/Documents/belajar-react-table/src/reportWebVitals.js":"3","/home/aswassaw/Documents/belajar-react-table/src/components/columns.js":"4","/home/aswassaw/Documents/belajar-react-table/src/components/table/basic/BasicTable.jsx":"5","/home/aswassaw/Documents/belajar-react-table/src/components/table/filter/ColumnFilter.jsx":"6","/home/aswassaw/Documents/belajar-react-table/src/components/table/sorting/SortingTable.jsx":"7","/home/aswassaw/Documents/belajar-react-table/src/components/table/filter/FilteringTable.jsx":"8","/home/aswassaw/Documents/belajar-react-table/src/components/table/filter/GlobalFilter.jsx":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":373,"mtime":1635915940192,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":1709,"mtime":1635915736111,"results":"14","hashOfConfig":"11"},{"size":1824,"mtime":1635915343927,"results":"15","hashOfConfig":"11"},{"size":321,"mtime":1635915037234,"results":"16","hashOfConfig":"11"},{"size":2416,"mtime":1635915380434,"results":"17","hashOfConfig":"11"},{"size":3585,"mtime":1635915876251,"results":"18","hashOfConfig":"11"},{"size":681,"mtime":1635915045295,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"jn7eq6",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/aswassaw/Documents/belajar-react-table/src/index.js",[],["40","41"],"/home/aswassaw/Documents/belajar-react-table/src/App.js",[],"/home/aswassaw/Documents/belajar-react-table/src/reportWebVitals.js",[],"/home/aswassaw/Documents/belajar-react-table/src/components/columns.js",[],"/home/aswassaw/Documents/belajar-react-table/src/components/table/basic/BasicTable.jsx",["42"],"/home/aswassaw/Documents/belajar-react-table/src/components/table/filter/ColumnFilter.jsx",[],"/home/aswassaw/Documents/belajar-react-table/src/components/table/sorting/SortingTable.jsx",["43"],"/home/aswassaw/Documents/belajar-react-table/src/components/table/filter/FilteringTable.jsx",["44"],"import \"../../table.css\";\nimport React, { Fragment, useMemo } from \"react\";\nimport { useTable, useSortBy, useGlobalFilter, useFilters } from \"react-table\";\nimport MOCK_DATA from \"../../MOCK_DATA.json\";\nimport { COLUMNS, GROUP_COLUMS } from \"../../columns\";\nimport { GlobalFilter } from \"./GlobalFilter\";\nimport { ColumnFilter } from \"./ColumnFilter\";\n\nconst FilteringTable = () => {\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const defaultColumn = useMemo(\n    () => ({\n      Filter: ColumnFilter,\n    }),\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow,\n    state,\n    setGlobalFilter,\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n    },\n    useFilters,\n    useGlobalFilter,\n    useSortBy\n  );\n\n  const { globalFilter } = state;\n\n  return (\n    <>\n      <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\n      <div>\n        {/* Table */}\n        <table {...getTableProps()}>\n          {/* Thead */}\n          <thead>\n            {headerGroups.map((headerGroup) => (\n              <Fragment key={(Math.random() + 1).toString(36).substring(7)}>\n                <tr {...headerGroup.getHeaderGroupProps()}>\n                  {headerGroup.headers.map((column) => (\n                    <th\n                      key={(Math.random() + 1).toString(36).substring(7)}\n                      {...column.getHeaderProps(column.getSortByToggleProps())}\n                    >\n                      {column.render(\"Header\")}\n                      <span>\n                        {column.isSorted ? (\n                          column.isSortedDesc ? (\n                            <>\n                              {\" \"}\n                              <i className='fas fa-long-arrow-alt-down'></i>\n                            </>\n                          ) : (\n                            <>\n                              {\" \"}\n                              <i className='fas fa-long-arrow-alt-up'></i>\n                            </>\n                          )\n                        ) : (\n                          \"\"\n                        )}\n                      </span>\n                    </th>\n                  ))}\n                </tr>\n                <tr>\n                  {headerGroup.headers.map((column) => (\n                    <th key={(Math.random() + 1).toString(36).substring(7)}>\n                      {column.canFilter && column.render(\"Filter\")}\n                    </th>\n                  ))}\n                </tr>\n              </Fragment>\n            ))}\n          </thead>\n          {/* Tbody */}\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row) => {\n              prepareRow(row);\n\n              return (\n                <tr {...row.getRowProps()}>\n                  {/* Table Data */}\n                  {row.cells.map((cell) => (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  ))}\n                </tr>\n              );\n            })}\n          </tbody>\n          {/* Tfoot */}\n          <tfoot>\n            {footerGroups.map((footerGroup) => (\n              <tr {...footerGroup.getFooterGroupProps()}>\n                {footerGroup.headers.map((column) => (\n                  <td {...column.getFooterProps()}>\n                    {column.render(\"Footer\")}\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tfoot>\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default FilteringTable;\n","/home/aswassaw/Documents/belajar-react-table/src/components/table/filter/GlobalFilter.jsx",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":5,"column":19,"nodeType":"51","messageId":"52","endLine":5,"endColumn":31},{"ruleId":"49","severity":1,"message":"50","line":5,"column":19,"nodeType":"51","messageId":"52","endLine":5,"endColumn":31},{"ruleId":"49","severity":1,"message":"50","line":5,"column":19,"nodeType":"51","messageId":"52","endLine":5,"endColumn":31},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'GROUP_COLUMS' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]